---

name: Deploying nginx container from GitHub Actions

on:
  push:
    branches:
      - develop
      - qa
      - main
  pull_request:
    branches:
      - main

env:
  branch: main

jobs:
  get_env_name:
    name: setting environment name
    runs-on: ubuntu-latest
    steps:
      - name: checkout to repo
        uses: actions/checkout@v3

      - name: Setting Environment Name Dynamically
        id: setenv
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/develop" || "${{ github.base_ref }}" == "develop" ]]; then
            echo "env=dev" >> $GITHUB_OUTPUT
            echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ github.ref }}" == "refs/heads/main" || "${{ github.base_ref }}" == "main" ]]; then
            echo "env=production" >> $GITHUB_OUTPUT
            echo "IMAGE_TAG=production-${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_OUTPUT
          fi

    outputs:
      env: ${{ steps.setenv.outputs.env }}
      image_tag: ${{ steps.setenv.outputs.IMAGE_TAG }}
      repo_name: ${{ steps.setenv.outputs.REPO_NAME }}


  build:
    name: Building the ${{ needs.get_env_name.outputs.repo_name }} Docker Image
    runs-on: ubuntu-22.04
    needs: [ get_env_name ]
    environment: ${{ needs.get_env_name.outputs.env }}
    env:
      IMAGE_NAME: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ vars.ECR_REG_NAME }}
      IMAGE_TAG: ${{ needs.get_env_name.outputs.image_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and push Docker image to ECR
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG